
server.port=8099

# База данных где установлен триггер на комнатах ozgg
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/ozgluh?useUnicode=true&serverTimezone=UTC&useSSL=false
# Было false и все хорошо работало    allowPublicKeyRetrieval = true & amp; useSSL = false/true
spring.datasource.username=root
spring.datasource.password=root


server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore.p12

server.ssl.key-store-password=password
server.ssl.key-alias=tomcat

#security.require-ssl=true
server.ssl.enabled=true

#trust.store=classpath:keystore.p12
#trust.store.password=password


#C:\Users\Konstantin\.jdks\openjdk-15.0.2\bin>keytool -importcert -file myCertificate.crt -alias ttomcat -keystore C:\Users\Konstantin\.jdks\openjdk-15.0.2\cacerts
#Enter keystore password:
#Certificate already exists in keystore under alias <tomcat>
#Do you still want to add it? [no]:  no
#Certificate was not added to keystore
#
#C:\Users\Konstantin\.jdks\openjdk-15.0.2\bin>keytool -importcert -file myCertificate.crt -alias ttomcat -keystore C:\Users\Konstantin\.jdks\openjdk-15.0.2\cacerts
#Enter keystore password:
#Certificate already exists in keystore under alias <tomcat>
#Do you still want to add it? [no]:  no
#Certificate was not added to keystore
#
#C:\Users\Konstantin\.jdks\openjdk-15.0.2\bin>
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:keystore/baeldung.p12
#server.ssl.key-store-password=asusx551ca
#server.ssl.key-alias=baeldung
#server.ssl.enabled=true






#spring.main.allow-bean-definition-overriding=true
#spring.mvc.format.date=yyyy-MM-dd

# Начало добавления
     #   spring.jpa.show-sql=true
     #   spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=update
    #   spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Конец добавления


      #  spring.jpa.open-in-view=false



#spring.mvc.view.prefix = /WEB-INF/jsp/
#spring.mvc.view.suffix = .jsp


#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/sarafa?useUnicode=true&serverTimezone=UTC&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=

